import { VerticalBox, ListView, StandardTableView, HorizontalBox } from "std-widgets.slint";

import { Palette, Font } from "./globals.slint";
import { Dimensions } from "globals.slint";

export struct SlintMoveInfo {
    white: string,
    black: string,
}

export struct DashboardState {
    move_history: [SlintMoveInfo],
    turn: int,
    en_passant_square: string,
    halfmove_clock: int,
    fullmove_count: int,
    compute_time: string,
}

export component Dashboard inherits Rectangle {
    in property <DashboardState> dashboard_state;

    property <[{text: string, value: string}]> info: [
        {text: "Fullmove Count:", value: dashboard_state.fullmove_count},
        {text: "Halfmove Clock:", value: dashboard_state.halfmove_clock},
        {text: "En Passant Square:", value: dashboard_state.en_passant_square},
        {text: "Time to compute valid moves:", value: dashboard_state.compute_time}
    ];

    VerticalBox {
        padding-top: 10px;
        padding-left: 10px;
        padding-right: 10px;
        padding-bottom: 0px;
        spacing: 20px;

        HorizontalLayout {
            move_columns := Rectangle {
                height: 350px;
                width: 80%;

                HorizontalLayout {
                    padding: 8px;
                    Text {
                        color: white;
                        min-width: move_columns.width * (1/5);
                        text: "#";
                        font-size: Font.font_size_sm;
                    }
                    Text {
                        color: white;
                        min-width: move_columns.width * (2/5);
                        text: "White";
                        font-size: Font.font_size_sm;
                    }
                    Text {
                        color: white;
                        min-width: move_columns.width  * (2/5);
                        text: "Black";
                        font-size: Font.font_size_sm;
                    }
                }
            }
        }

        HorizontalLayout {
            alignment: center;

            move_history_border := Rectangle {
                height: move_columns.height;
                width: move_columns.width;
                border-color: Palette.border;
                border-width: 2px;
                border-radius: 2px;
            
                move_history := ListView {
                    height: move_history_border.height - (move_history_border.border_width * 2);
                    width: move_history_border.width - (move_history_border.border_width * 2);
                    for move[i] in root.dashboard_state.move-history : Rectangle {
                        background: Math.mod(i, 2) == 0 ? Palette.dashboard_bg : Palette.alternate_bg;
                        width: move_history.width;
                        HorizontalLayout {
                            padding: 8px;
                            Text {
                                color: white;
                                min-width: move_history.width * (1/5);
                                text: (i + 1) + ".";
                                font-size: Font.font_size_sm;
                            }
                            Text {
                                color: white;
                                min-width: move_history.width * (2/5);
                                text: move.white;
                                font-size: Font.font_size_sm;
                            }
                            Text {
                                color: white;
                                min-width: move_history.width  * (2/5);
                                text: move.black;
                                font-size: Font.font_size_sm;
                            }
                        }
                    }
                }
            }
        }
    }

    info_border := Rectangle {
        x: 0;
        y: Dimensions.board_size - self.height;
        height: 124px;
        width: 100%;
        border-color: Palette.border;
        border-width: 2px;

        info_table := ListView {
            width: info_border.width - (info_border.border-width * 2);
            height: info_border.height - (info_border.border-width * 2);
            for row[i] in root.info : Rectangle {
                background: Math.mod(i, 2) == 0 ? Palette.dashboard_bg : Palette.alternate_bg;
                width: info_table.width;
                HorizontalLayout {
                    padding: 8px;
                    Text {
                        color: white;
                        min-width: info_table.width / 2;
                        text: row.text;
                        font-size: Font.font_size_sm;
                    }
                    Text {
                        color: white;
                        min-width: info_table.width / 2;
                        text: row.value;
                        font-size: Font.font_size_sm;
                        
                    }
                }
            }
        }
    }
}
